generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model rder {
  delivery_fee           Float?
  promotion_promotion_id Int?
  status                 Int?         @db.TinyInt
  total_amount           Int?
  created_date           DateTime?    @db.DateTime(6)
  last_modified_date     DateTime?    @db.DateTime(6)
  phone_number           String?      @db.VarChar(20)
  order_id               String       @id @db.VarChar(36)
  user_id                String?      @db.VarChar(36)
  customer_name          String?      @db.VarChar(100)
  address                String?      @db.VarChar(500)
  cancel_reason          String?      @db.VarChar(500)
  note                   String?      @db.VarChar(500)
  created_by             String?      @db.VarChar(255)
  last_modified_by       String?      @db.VarChar(255)
  user_user_id           String?      @db.VarChar(255)
  promotion              promotion?   @relation(fields: [promotion_promotion_id], references: [promotion_id], onDelete: NoAction, onUpdate: NoAction, map: "FK317caxcyxnxcxg30sajv0t0qe")
  user                   user?        @relation(fields: [user_user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "FKhvrdgf5m0lijlbx6q6jxgn05h")
  order_item             order_item[]
  payment                payment[]

  @@index([promotion_promotion_id], map: "FK317caxcyxnxcxg30sajv0t0qe")
  @@index([user_user_id], map: "FKhvrdgf5m0lijlbx6q6jxgn05h")
  @@map("0rder")
}

model brand {
  brand_id           Int       @id @default(autoincrement())
  created_date       DateTime? @db.DateTime(6)
  deleted_date       DateTime? @db.DateTime(6)
  last_modified_date DateTime? @db.DateTime(6)
  slug               String?   @db.VarChar(100)
  created_by         String?   @db.VarChar(255)
  last_modified_by   String?   @db.VarChar(255)
  name               String?   @db.VarChar(255)
  product            product[]
}

model category {
  category_id        Int        @id @default(autoincrement())
  parent_category_id Int?
  created_date       DateTime?  @db.DateTime(6)
  deleted_date       DateTime?  @db.DateTime(6)
  last_modified_date DateTime?  @db.DateTime(6)
  name               String     @unique(map: "UK_46ccwnsi9409t36lurvtyljak") @db.VarChar(100)
  slug               String?    @db.VarChar(100)
  created_by         String?    @db.VarChar(255)
  last_modified_by   String?    @db.VarChar(255)
  category           category?  @relation("categoryTocategory", fields: [parent_category_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction, map: "FKs2ride9gvilxy2tcuv7witnxc")
  other_category     category[] @relation("categoryTocategory")
  product            product[]

  @@index([parent_category_id], map: "FKs2ride9gvilxy2tcuv7witnxc")
}

model color {
  color_id           Int              @id @default(autoincrement())
  created_date       DateTime?        @db.DateTime(6)
  last_modified_date DateTime?        @db.DateTime(6)
  created_by         String?          @db.VarChar(255)
  image              String?          @db.VarChar(255)
  last_modified_by   String?          @db.VarChar(255)
  name               String?          @db.VarChar(255)
  product_image      product_image[]
  product_option     product_option[]
}

model order_item {
  price             Float
  product_option_id Int
  quantity          Int
  order_id          String         @db.VarChar(255)
  rder              rder           @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction, map: "FKmby8xiy5kpsm8p3283gaowrv9")
  product_option    product_option @relation(fields: [product_option_id], references: [product_option_id], onDelete: NoAction, onUpdate: NoAction, map: "FKsoimewh387var4rtx7v1wa2wv")

  @@id([product_option_id, order_id])
  @@index([order_id], map: "FKmby8xiy5kpsm8p3283gaowrv9")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model payment {
  amount             Float     @db.Float
  payment_method     Int       @db.TinyInt
  status             Int       @db.TinyInt
  created_date       DateTime? @db.DateTime(6)
  last_modified_date DateTime? @db.DateTime(6)
  order_order_id     String?   @db.VarChar(36)
  payment_id         String    @id @db.VarChar(36)
  created_by         String?   @db.VarChar(255)
  last_modified_by   String?   @db.VarChar(255)
  payment_details    String    @db.VarChar(255)
  payment_response   String?   @db.VarChar(255)
  transaction_id     String    @db.VarChar(255)
  rder               rder?     @relation(fields: [order_order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction, map: "FKq554b1a52h8gomsx6uouax918")

  @@index([order_order_id], map: "FKq554b1a52h8gomsx6uouax918")
}

model permission {
  display_name     String             @db.VarChar(50)
  normalized_name  String             @id @db.VarChar(50)
  description      String?            @db.VarChar(100)
  role_permissions role_permissions[] @ignore
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model product {
  brand_brand_id       Int?
  category_category_id Int?
  discount             Float
  for_gender           Int              @db.TinyInt
  price                Float
  product_id           Int              @id @default(autoincrement())
  created_date         DateTime?        @db.DateTime(6)
  deleted_date         DateTime?        @db.DateTime(6)
  last_modified_date   DateTime?        @db.DateTime(6)
  created_by           String?          @db.VarChar(255)
  description          String           @db.Text
  display_image        String           @db.VarChar(255)
  last_modified_by     String?          @db.VarChar(255)
  name                 String           @db.VarChar(255)
  slug                 String           @unique(map: "UK_88yb4l9100epddqsrdvxerhq9") @db.VarChar(255)
  brand                brand?           @relation(fields: [brand_brand_id], references: [brand_id], onDelete: NoAction, onUpdate: NoAction, map: "FKboqft24mwam9ifa6xlj12cjpc")
  category             category?        @relation(fields: [category_category_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction, map: "FKle1pobdrc8a2uw97gukfmvan4")
  product_image        product_image[]
  product_option       product_option[]

  @@index([brand_brand_id], map: "FKboqft24mwam9ifa6xlj12cjpc")
  @@index([category_category_id], map: "FKle1pobdrc8a2uw97gukfmvan4")
}

model product_image {
  for_color_color_id Int?
  product_product_id Int?
  created_date       DateTime? @db.DateTime(6)
  last_modified_date DateTime? @db.DateTime(6)
  url                String    @id @db.VarChar(500)
  created_by         String?   @db.VarChar(255)
  last_modified_by   String?   @db.VarChar(255)
  product            product?  @relation(fields: [product_product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "FK4emctl4klpqjbh93ho5q8pvik")
  color              color?    @relation(fields: [for_color_color_id], references: [color_id], onDelete: NoAction, onUpdate: NoAction, map: "FK639aj7pfoet24fjm1fkkh0q8m")

  @@index([product_product_id], map: "FK4emctl4klpqjbh93ho5q8pvik")
  @@index([for_color_color_id], map: "FK639aj7pfoet24fjm1fkkh0q8m")
}

model product_option {
  color_color_id     Int?
  product_option_id  Int          @id @default(autoincrement())
  product_product_id Int?
  stock              Int
  created_date       DateTime?    @db.DateTime(6)
  deleted_date       DateTime?    @db.DateTime(6)
  last_modified_date DateTime?    @db.DateTime(6)
  size               String       @db.VarChar(50)
  created_by         String?      @db.VarChar(255)
  last_modified_by   String?      @db.VarChar(255)
  order_item         order_item[]
  color              color?       @relation(fields: [color_color_id], references: [color_id], onDelete: NoAction, onUpdate: NoAction, map: "FK19qrg9y80nlioamtmiq57lukp")
  product            product?     @relation(fields: [product_product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "FKf135hq0tq3mo9dttbfhcidbac")

  @@index([color_color_id], map: "FK19qrg9y80nlioamtmiq57lukp")
  @@index([product_product_id], map: "FKf135hq0tq3mo9dttbfhcidbac")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model promotion {
  active             Boolean   @db.Bit(1)
  discount           Int
  max_value          Int?
  min_order_amount   Int?
  promotion_id       Int       @id @default(autoincrement())
  stock              Int
  type               Int       @db.TinyInt
  created_date       DateTime? @db.DateTime(6)
  deleted_date       DateTime? @db.DateTime(6)
  end_date           DateTime  @db.DateTime(6)
  last_modified_date DateTime? @db.DateTime(6)
  start_date         DateTime  @db.DateTime(6)
  code               String    @unique(map: "UK_lomfalb6gsh66ox4gy0t2g7qw") @db.VarChar(100)
  name               String    @db.VarChar(100)
  created_by         String?   @db.VarChar(255)
  description        String?   @db.VarChar(255)
  last_modified_by   String?   @db.VarChar(255)
  rder               rder[]
}

model role {
  created_date       DateTime?          @db.DateTime(6)
  last_modified_date DateTime?          @db.DateTime(6)
  display_name       String             @db.VarChar(50)
  normalized_name    String             @id @db.VarChar(50)
  description        String?            @db.VarChar(100)
  created_by         String?            @db.VarChar(255)
  last_modified_by   String?            @db.VarChar(255)
  role_permissions   role_permissions[] @ignore
  user_roles         user_roles[]       @ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model role_permissions {
  permission_id String     @db.VarChar(50)
  role_id       String     @db.VarChar(50)
  permission    permission @relation(fields: [permission_id], references: [normalized_name], onDelete: NoAction, onUpdate: NoAction, map: "FKh0v7u4w7mttcu81o8wegayr8e")
  role          role       @relation(fields: [role_id], references: [normalized_name], onDelete: NoAction, onUpdate: NoAction, map: "FKlodb7xh4a2xjv39gc3lsop95n")

  @@index([permission_id], map: "FKh0v7u4w7mttcu81o8wegayr8e")
  @@index([role_id], map: "FKlodb7xh4a2xjv39gc3lsop95n")
  @@ignore
}

model user {
  is_account_enabled Boolean      @db.Bit(1)
  is_customer        Boolean      @db.Bit(1)
  is_email_verified  Boolean      @db.Bit(1)
  created_at         DateTime?    @db.DateTime(6)
  email              String       @unique(map: "UK_ob8kqyqqgmefl0aco34akdtpe") @db.VarChar(100)
  first_name         String       @db.VarChar(100)
  last_name          String       @db.VarChar(100)
  password_hash      String       @db.VarChar(100)
  phone_number       String?      @db.VarChar(100)
  avatar_url         String?      @db.VarChar(200)
  address            String?      @db.VarChar(500)
  user_id            String       @id @db.VarChar(255)
  rder               rder[]
  user_roles         user_roles[] @ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model user_roles {
  normalized_name String @db.VarChar(50)
  user_id         String @db.VarChar(255)
  user            user   @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "FK55itppkw3i07do3h7qoclqd4k")
  role            role   @relation(fields: [normalized_name], references: [normalized_name], onDelete: NoAction, onUpdate: NoAction, map: "FKl4wmn6fu283xgevynrmicn4s4")

  @@index([user_id], map: "FK55itppkw3i07do3h7qoclqd4k")
  @@index([normalized_name], map: "FKl4wmn6fu283xgevynrmicn4s4")
  @@ignore
}
